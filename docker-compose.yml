version: '3'
networks:
  pulsar:
    driver: bridge
  app:
    driver: bridge

services:
# Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    profiles: [ "pulsar" ]
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

# Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    profiles: [ "pulsar" ]
    networks:
      - pulsar
    command: >
      bin/pulsar initialize-cluster-metadata \
               --cluster cluster-a \
               --zookeeper zookeeper:2181 \
               --configuration-store zookeeper:2181 \
               --web-service-url http://broker:8080 \
               --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

# Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    profiles: [ "pulsar" ]
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
# Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf
      && exec bin/pulsar bookie"

# Start broker
  broker:
    image: apachepulsar/pulsar:latest
    profiles: [ "pulsar" ]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://127.0.0.1:6650
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf
      &&  exec bin/pulsar broker"

# real state alpes services
  rs-alpes_db:
    image: postgres:latest
    container_name: rs-alpes_db
    profiles: [ "rs-alpes" ]
    hostname: rs-alpes_db
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: rs-alpes
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - app

  rs-alpes:
    container_name: rs-alpes
    hostname: rs-alpes
    build:
      context: .
      dockerfile: rs-alpes.Dockerfile
    profiles: [ "rs-alpes" ]
    networks:
      - pulsar
      - app
    depends_on:
      rs-alpes_db:
        condition: service_healthy
    environment:
      - RS_ALPES_ADDRESS=rs-alpes
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@postgres:5432/rs-alpes
      - PULSAR_ADDRESS=broker
      - BROKER_HOST=broker
    ports:
      - "5000:5000"

# Notification Services
  notificator:
    container_name: notificator
    hostname: notificator
    build:
      context: .
      dockerfile: notificator.Dockerfile
    profiles: [ "notificator" ]
    networks:
      - pulsar
    depends_on:
      - rs-alpes
      - broker
    environment:
      - RS_ALPES_ADDRESS=rs-alpes
      - PULSAR_ADDRESS=broker

